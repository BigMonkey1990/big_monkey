#include<iostream>
using namespace std;

/*
Remove Duplicates from Sorted Array
	Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

	Do not allocate extra space for another array, you must do this in place with constant memory.

	For example,
	Given input array A = [1,1,2],

	Your function should return length = 2, and A is now [1,2].

标签: Array Two Pointers
*/
//分析： 已经排好序的数组，去除重复的元素, 然后保留单一的元素
// LeetCode, Remove Duplicates from Sorted Array
// 时间复杂度O(n)，空间复杂度O(1)


class Solution
{
public:
	int removeDuplicates(int A[], int num)
	{
		if (num == 0) return 0;

		int index = 0;
		for (int num_i = 1; num_i < num; num_i++)
		{
			if (A[index] != A[num_i])
			{
				A[++index] = A[num_i];
			}
		}
		return index+1;
	}
};


int main()
{
	int A[4] = {1,1,1,2};
	Solution test_a;
	int index = test_a.removeDuplicates(A, 4);
	cout << index << endl;

	system("pause");
	return 0;
}
